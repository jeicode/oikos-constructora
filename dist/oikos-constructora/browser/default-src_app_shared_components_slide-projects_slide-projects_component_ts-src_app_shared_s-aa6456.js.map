{"version":3,"file":"default-src_app_shared_components_slide-projects_slide-projects_component_ts-src_app_shared_s-aa6456.js","mappings":"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","sources":["./src/app/shared/components/slide-projects/slide-projects.component.ts","./src/app/shared/components/slide-projects/slide-projects.component.html","./src/app/shared/services/functions/seo.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { SwiperModule } from 'swiper/angular';\nimport SwiperCore,{ Navigation, Pagination, SwiperOptions } from 'swiper';\nimport { ProjectService } from '../../services/api/project.service';\nimport { Project } from 'src/app/core/models/project.model';\nimport { environment } from 'src/environments/environment';\nimport { DefaultImgDirective } from '../../directives/default-img.directive';\nimport { RouterModule } from '@angular/router';\n\n\nSwiperCore.use([Navigation, Pagination]);\n\n@Component({\n  selector: 'app-slide-projects',\n  templateUrl: './slide-projects.component.html',\n  styleUrls: ['./slide-projects.component.css'],\n  standalone: true,\n  imports:[\n    CommonModule,\n    SwiperModule,\n    RouterModule,\n\n    // directives\n    DefaultImgDirective\n  ]\n})\nexport class SlideProjectsComponent implements OnInit {\n\n  BASE_URL:string = environment.base_url\n\n  config: SwiperOptions = {\n    slidesPerView: 1,\n    breakpoints:{\n        1050:{\n            slidesPerView: 3,\n        },\n        768:{\n            slidesPerView: 2,\n        },\n        100:{\n            slidesPerView: 1,\n        },\n    },\n    navigation: {\n        nextEl: \".cnt_car_proy_dest .swiper-button-next\",\n        prevEl: \".cnt_car_proy_dest .swiper-button-prev\",\n      },\n  };\n\n  @Input() projects:Project[] = []\n\n\n\n  constructor(private projectService: ProjectService) {}\n  \n  ngOnInit(): void {\n    this.getFeaturedProjects()  \n  }\n\n\n  async getFeaturedProjects(){\n    if (this.projects.length == 0) {\n      const projects = await this.projectService.getFeaturedProjects()\n      console.log('%cslide-projects.component.ts line:65 projects', 'color: #007acc;', projects);\n      if(projects) this.projects = projects\n    }\n  }\n\n}\n","<div class=\"cnt_car_proy_dest\">\n    <div class=\"swiper-container\">\n        <swiper [config]=\"config\">\n            <ng-template swiperSlide *ngFor=\"let i of projects\">\n                <div class=\"card_p\">\n                    <picture>\n                        <span class=\"tag_state\" [ngStyle]=\"{'background-color': i?.color_secundario}\">{{i?.estado_proyecto}}</span>\n                        <div class=\"btns_icons\">\n                            <a [href]=\"i?.vista360\" target=\"_blank\" class=\"btn_icon\" *ngIf=\"i?.vista360\">\n                                <img src=\"assets/images/diseno/proyectos_vivienda/icon_360.svg\" width=\"20\" height=\"20\">\n                            </a>\n                            <a [href]=\"i?.url_waze\" target=\"_blank\" *ngIf=\"i?.url_waze\" class=\"btn_icon\">\n                                <span class=\"fas fa-map-marker-alt\"></span>\n                            </a>\n                        </div>\n                        <img width=\"350\" height=\"219\" \n                            defaultImg\n                            [src]=\"BASE_URL+i?.imagen_principal_proyecto\" \n                            [alt]=\"i?.alt_principal\" \n                            [title]=\"i?.title_principal\">\n                    </picture>\n                    <h2 class=\"name_proyecto\" [ngStyle]=\"{'background-color': i?.color_primario}\">\n                        <picture>\n                            <img width=\"87\" height=\"87\" defaultImg\n                                [src]=\"BASE_URL+i?.logo_proyecto\" \n                                [alt]=\"i?.alt_logo\" \n                                [title]=\"i?.title_logo\">\n                        </picture>\n                        <div>{{i?.titulo_proyecto}}</div>\n                    </h2>\n                    <div class=\"datos_proyecto\">\n                        <h3>{{i?.zona_proyecto}} / {{i?.ubicacion_proyecto}}</h3>\n                        <h4><span>Desde</span> {{i?.valor_proyecto_formato}} </h4>\n                    </div>\n                    <div class=\"franja_p\">\n                        <img width=\"20\" height=\"20\" src=\"/assets/images/diseno/proyectos_vivienda/icono_proyecto.svg\" alt=\"\">\n                        <span> Aplica subsidio de vivienda VIS </span>\n                    </div>\n                    <div class=\"ctas_proyectos\">\n                        <a [href]=\"i?.api_wsp\" target=\"_blank\" class=\"btn_whatsapp\" *ngIf=\"i?.api_wsp\">\n                            <span class=\"fab fa-whatsapp\"></span> contactar\n                        </a>\n                        <a [routerLink]=\"['/proyecto', i?.url_amigable]\" class=\"btn\">ver proyecto</a>\n                    </div>\n                </div>\n            </ng-template>\n        </swiper>\n    </div>\n    <div class=\"swiper-button-next\"></div>\n    <div class=\"swiper-button-prev\"></div>\n</div>\n\n\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { SeoPage } from 'src/app/core/models/seo-page.model';\nimport { PageService } from '../api/page.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeoService {\n\n  constructor(private meta: Meta,\n              private pageService:PageService,\n              @Inject(DOCUMENT) private doc: Document,\n              private titlePage: Title) { }\n\n  updateCanonicalUrl(canonical:string = \"\") {\n\n    let element: HTMLLinkElement | null = this.doc.querySelector(`link[rel='canonical']`) || null\n\n    if (!element) { // create canonical element\n      element = this.doc.createElement('link');\n    }\n\n    element.setAttribute('rel','canonical')\n    canonical ? element.setAttribute('href',canonical) : element.setAttribute('href', this.doc.URL);\n    this.doc.head.appendChild(element);\n  }\n\n  setUpMetaTags(seoPage:SeoPage) {\n    if (seoPage){\n      var canonical = '';\n      if(seoPage.canonical!=''){\n        canonical = seoPage.canonical;\n      }\n      this.updateCanonicalUrl(canonical);\n      this.titlePage.setTitle(seoPage.title)\n      this.meta.updateTag({ name: 'description', content: seoPage.metadescription });\n      this.meta.updateTag({ name: 'robots', content: seoPage.metarobots });\n    }\n  }\n}\n"],"names":["CommonModule","SwiperModule","SwiperCore","Navigation","Pagination","environment","DefaultImgDirective","RouterModule","i0","i_r1","use","SlideProjectsComponent","constructor","projectService","base_url","slidesPerView","breakpoints","navigation","nextEl","prevEl","ngOnInit","getFeaturedProjects","projects","length","console","log","selectors","inputs","standalone","features","decls","vars","consts","template","i2","i3","i4","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}